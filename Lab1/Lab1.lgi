41 2 0
38 1
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 114 44 0 \NUL
Kanuma, Midori
22 8 96 75 76 0 \NUL
mkanuma
22 96 592 184 572 0 \NUL
Part A Output
8 63 174 112 125 1 0
8 63 214 112 165 1 0
8 63 254 112 205 1 0
11 180 473 207 375 0 1
7 416 432 465 383 0 1
7 344 432 393 383 0 1
7 628 401 677 352 0 1
7 628 441 677 392 0 1
7 628 481 677 432 0 1
22 336 600 449 576 0 \NUL
Part B Output
22 600 592 689 572 0 \NUL
Part C Output
20 159 142 218 123 0
in_0
20 159 182 218 163 0
in_1
20 159 222 218 203 0
in_2
8 63 294 112 245 1 0
20 159 262 218 243 0
in_3
19 108 369 167 350 0
a_3
19 100 401 159 382 0
a_2
19 92 433 151 414 0
a_1
19 84 465 143 446 0
a_0
19 76 497 135 478 0
a_d
19 352 376 411 357 0
b_0
19 280 376 339 357 0
b_1
19 540 369 599 350 0
c_2
19 540 409 599 390 0
c_1
19 540 449 599 430 0
c_0
22 680 464 758 440 0 \NUL
SOP/POS
22 680 424 772 400 0 \NUL
NAND Only
22 680 384 761 360 0 \NUL
NOR Only
22 288 624 473 604 0 \NUL
This output reads in_0 as 0,
22 288 648 516 628 0 \NUL
in_1 as 1, in_2 as 2 and in_3 as 3.
22 288 672 493 652 0 \NUL
It then converts those numbers
22 560 624 758 604 0 \NUL
This output represents the out
22 560 648 781 628 0 \NUL
column of the truth table provided
22 560 672 790 652 0 \NUL
in the lab, where the input columns
22 48 624 222 604 0 \NUL
This output represents the
22 48 648 228 628 0 \NUL
decimal value of the binary
22 48 672 260 652 0 \NUL
number where a_n is the (n+1)th
22 48 696 225 676 0 \NUL
bit. a_d corresponds to the
22 48 720 168 700 0 \NUL
dot on the bottom.
22 288 720 535 700 0 \NUL
values are represented by the lamps.
22 288 696 514 676 0 \NUL
from decimal to binary. The binary
22 560 696 798 676 0 \NUL
correspond to the in_0 through in_3.
1 160 252 109 269
1 109 229 160 212
1 109 189 160 172
1 109 149 160 132
1 164 359 181 439
1 156 391 181 445
1 148 423 181 451
1 132 487 181 469
1 140 455 181 457
1 408 366 417 407
1 336 366 345 407
1 596 359 629 376
1 596 399 629 416
1 596 439 629 456
38 2
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 114 44 0 \NUL
Kanuma, Midori
22 8 96 75 76 0 \NUL
mkanuma
22 9 128 51 108 0 \NUL
Part A
20 88 304 147 285 0
a_d
20 88 256 147 237 0
a_0
20 88 224 147 205 0
a_1
20 88 192 147 173 0
a_2
20 88 160 147 141 0
a_3
19 16 256 75 237 0
in_0
19 16 224 75 205 0
in_1
19 16 192 75 173 0
in_2
19 16 160 75 141 0
in_3
15 24 320 73 271
22 160 160 423 140 0 \NUL
This circuit takes input in_n from page 1
22 160 184 426 164 0 \NUL
and connects it directly to the 7-segment
22 160 208 444 188 0 \NUL
display on page 1. I opted to hard-code a_d
22 160 232 432 212 0 \NUL
to a voltage source so the dot will always
22 160 256 420 236 0 \NUL
stay on. This circuit converts the binary
22 160 280 419 260 0 \NUL
input to decimal, then displays it on the
22 160 304 407 284 0 \NUL
display with a dot on the bottom-right.
1 72 150 89 150
1 72 182 89 182
1 72 214 89 214
1 72 246 89 246
1 89 294 70 295
38 3
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 114 44 0 \NUL
Kanuma, Midori
22 8 96 75 76 0 \NUL
mkanuma
22 8 128 52 108 0 \NUL
Part B
19 8 392 67 373 0
in_0
19 8 312 67 293 0
in_1
19 8 232 67 213 0
in_2
19 8 160 67 141 0
in_3
20 616 328 675 309 0
b_1
20 616 552 675 533 0
b_0
10 144 392 161 375 0 0
10 144 152 161 135 0 0
10 144 288 161 271 0 0
10 144 368 161 351 0 0
10 144 456 161 439 0 0
10 144 208 161 191 0 0
10 144 232 161 215 0 0
10 144 312 161 295 0 0
10 80 152 97 135 0 0
10 72 232 89 215 0 0
10 72 312 89 295 0 0
10 72 392 89 375 0 0
5 96 224 145 175 0
5 96 304 145 255 0
5 96 384 145 335 0
5 96 472 145 423 0
3 416 312 465 263 0 0
3 416 368 465 319 0 0
3 480 328 529 279 0 0
3 416 424 465 375 0 0
3 416 480 465 431 0 0
3 480 440 529 391 0 0
3 416 536 465 487 0 0
3 416 592 465 543 0 0
3 416 648 465 599 0 0
3 416 704 465 655 0 0
3 480 552 529 503 0 0
3 480 664 529 615 0 0
4 544 344 593 295 0 0
4 544 568 593 519 0 0
20 160 152 219 133 0
3
20 160 208 219 189 0
not_3
20 160 232 219 213 0
2
20 160 288 219 269 0
not_2
20 160 312 219 293 0
1
20 160 368 219 349 0
not_1
20 160 456 219 437 0
not_0
19 336 280 395 261 0
not_0
19 336 312 395 293 0
not_1
19 336 336 395 317 0
2
19 336 368 395 349 0
not_3
19 336 392 395 373 0
not_0
19 336 424 395 405 0
not_1
19 336 448 395 429 0
not_2
19 336 480 395 461 0
3
19 336 504 395 485 0
not_0
19 336 536 395 517 0
1
19 336 560 395 541 0
not_2
19 336 592 395 573 0
not_3
19 336 616 395 597 0
not_0
19 336 648 395 629 0
not_1
19 336 672 395 653 0
not_2
19 336 704 395 685 0
3
20 160 392 219 373 0
0
22 240 192 481 172 0 \NUL
Here, I make senders for the original
22 240 216 466 196 0 \NUL
inputs and their respective inverts
22 240 240 469 220 0 \NUL
so the rest of the circuit would look
22 240 264 296 244 0 \NUL
cleaner.
22 232 160 420 140 0 \NUL
<--------------------------------------------
22 16 504 284 484 0 \NUL
---------------------------------------------------------------->
22 24 536 284 516 0 \NUL
The left-most column are the inputs that
22 24 560 298 540 0 \NUL
will make up the product. The 2nd and 3rd
22 24 584 300 564 0 \NUL
column represents the multiplicaion of the
22 24 608 299 588 0 \NUL
inputs to make the min terms. The 4th row
22 24 632 287 612 0 \NUL
represents the addition of the min terms
22 24 656 227 636 0 \NUL
to make up the sum of product.
22 24 688 290 668 0 \NUL
Overall, this circuit takes the n from in_n
22 24 712 292 692 0 \NUL
as a decimal number and converts it into
22 24 736 265 716 0 \NUL
binary, then displays it on the lamps
22 24 760 314 740 0 \NUL
connected receiving the b_0 and b_1 signal.
1 88 143 64 150
1 152 143 89 143
1 80 223 64 222
1 80 303 64 302
1 80 383 64 382
1 152 383 81 383
1 152 303 81 303
1 152 223 81 223
1 97 199 89 143
1 152 199 142 199
1 97 279 81 223
1 152 279 142 279
1 97 359 81 303
1 152 359 142 359
1 97 447 81 383
1 152 447 142 447
1 481 289 462 287
1 481 317 462 343
1 481 401 462 399
1 481 429 462 455
1 481 513 462 511
1 481 541 462 567
1 481 625 462 623
1 481 653 462 679
1 545 557 526 639
1 545 529 526 527
1 617 542 590 543
1 545 305 526 303
1 545 333 526 415
1 617 318 590 319
1 161 142 153 143
1 161 198 153 199
1 161 222 153 223
1 161 278 153 279
1 161 302 153 303
1 161 358 153 359
1 161 446 153 447
1 417 273 392 270
1 417 301 392 302
1 417 329 392 326
1 417 357 392 358
1 417 385 392 382
1 417 413 392 414
1 417 441 392 438
1 417 469 392 470
1 417 497 392 494
1 417 525 392 526
1 417 553 392 550
1 417 581 392 582
1 417 609 392 606
1 417 637 392 638
1 417 665 392 662
1 417 693 392 694
1 153 383 161 382
38 4
22 8 128 87 108 0 \NUL
Part C: SOP
20 544 160 603 141 0
c_0
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 114 44 0 \NUL
Kanuma, Midori
22 8 96 75 76 0 \NUL
mkanuma
19 16 352 75 333 0
0
19 16 280 75 261 0
1
19 16 400 75 381 0
2
19 16 520 75 501 0
3
3 248 224 297 175 2 0
3 248 264 297 215 2 0
3 248 304 297 255 2 0
19 16 184 75 165 0
not_1
19 16 376 75 357 0
not_1
19 16 472 75 453 0
not_1
19 16 256 75 237 0
not_0
19 16 448 75 429 0
not_0
19 16 160 75 141 0
not_0
19 16 208 75 189 0
not_2
19 16 304 75 285 0
not_2
19 16 496 75 477 0
not_2
19 16 232 75 213 0
not_3
19 16 328 75 309 0
not_3
19 16 424 75 405 0
not_3
3 240 184 289 135 2 0
4 424 192 473 143 2 0
22 208 424 436 404 0 \NUL
<------------------------------------------------------
22 216 456 435 436 0 \NUL
This section recycles the original
22 216 480 452 460 0 \NUL
input and inverse senders from part
22 216 504 469 484 0 \NUL
B. Having these receivers here makes
22 216 528 474 508 0 \NUL
the circuit much neater as you can see.
22 360 208 584 188 0 \NUL
<-----------------------------------------------------
22 368 240 607 220 0 \NUL
The column of the 4-input AND gates
22 368 264 641 244 0 \NUL
represents the multiplication of the inputs
22 368 288 652 268 0 \NUL
to make the min terms. The 4-input OR gate
22 368 312 619 292 0 \NUL
shows the addition of the min terms to
22 368 336 613 316 0 \NUL
make the final SOP. This circuit takes
22 368 360 634 340 0 \NUL
the truth table from the Lab1 instructions
22 368 384 602 364 0 \NUL
and implements it as a logic circuit.
1 241 145 72 150
1 241 154 72 174
1 241 173 72 222
1 241 164 72 198
1 249 185 72 246
1 249 194 72 270
1 249 204 72 294
1 249 213 72 318
1 249 225 72 342
1 249 234 72 366
1 249 244 72 390
1 249 253 72 414
1 249 265 72 438
1 249 274 72 462
1 249 284 72 486
1 249 293 72 510
1 286 159 425 153
1 425 162 294 199
1 425 172 294 239
1 425 181 294 279
1 470 167 545 150
38 5
22 8 128 139 108 0 \NUL
Part C: NAND ONLY
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 114 44 0 \NUL
Kanuma, Midori
22 8 96 75 76 0 \NUL
mkanuma
20 512 192 571 173 0
c_1
3 352 232 401 183 2 1
3 352 192 401 143 2 1
3 352 272 401 223 2 1
3 352 312 401 263 2 1
3 456 208 505 159 2 1
19 8 160 67 141 0
in_0
19 8 192 67 173 0
in_1
19 8 224 67 205 0
in_2
19 8 256 67 237 0
in_3
19 8 288 67 269 0
in_0
19 8 320 67 301 0
in_1
19 8 352 67 333 0
in_2
19 8 384 67 365 0
in_3
19 8 416 67 397 0
in_0
19 8 448 67 429 0
in_1
19 8 480 67 461 0
in_2
19 8 576 67 557 0
in_1
19 8 512 67 493 0
in_3
19 8 544 67 525 0
in_0
19 8 608 67 589 0
in_2
19 8 640 67 621 0
in_3
10 80 160 97 143 0 0
3 96 176 145 127 0 1
10 120 192 137 175 0 0
3 136 208 185 159 0 1
10 160 224 177 207 0 0
3 176 240 225 191 0 1
10 80 256 97 239 0 0
3 96 272 145 223 0 1
10 120 288 137 271 0 0
3 136 304 185 255 0 1
10 80 352 97 335 0 0
3 96 368 145 319 0 1
10 120 384 137 367 0 0
3 136 400 185 351 0 1
10 80 448 97 431 0 0
3 96 464 145 415 0 1
10 80 512 97 495 0 0
3 96 528 145 479 0 1
10 112 544 129 527 0 0
3 136 560 185 511 0 1
10 160 576 177 559 0 0
3 176 592 225 543 0 1
10 80 608 97 591 0 0
3 96 624 145 575 0 1
10 224 160 241 143 0 0
10 224 192 241 175 0 0
10 224 224 241 207 0 0
10 224 256 241 239 0 0
10 224 288 241 271 0 0
10 224 352 241 335 0 0
10 224 384 241 367 0 0
10 224 416 241 399 0 0
10 224 448 241 431 0 0
10 224 480 241 463 0 0
10 224 512 241 495 0 0
10 224 544 241 527 0 0
10 224 576 241 559 0 0
10 224 608 241 591 0 0
10 224 640 241 623 0 0
10 224 320 241 303 0 0
22 352 344 660 324 0 \NUL
<--------------------------------------------------------------------------
22 360 376 688 356 0 \NUL
For this section, I opted not to recycle the inverted
22 360 400 695 380 0 \NUL
inputs from part B to show that I could represent an
22 360 424 680 404 0 \NUL
inverter using a NAND gate only. The first 3 rows
22 360 448 675 428 0 \NUL
shows the inversion of necessary inputs via the
22 360 472 662 452 0 \NUL
use of NAND gates taking two identical inputs.
22 360 496 653 476 0 \NUL
The rest of the circuit is a version of the SOP
22 360 520 688 500 0 \NUL
circuit that only uses NAND gates by De Morgan's
22 360 544 462 524 0 \NUL
law expansion.
22 360 576 671 556 0 \NUL
This circuit will give the same out put as part C:
22 360 600 666 580 0 \NUL
SOP since they represent the same truth table.
1 457 169 398 167
1 457 178 398 207
1 457 188 398 247
1 457 197 398 287
1 513 182 502 183
1 97 137 89 151
1 97 165 89 151
1 137 169 129 183
1 137 197 129 183
1 177 201 169 215
1 177 229 169 215
1 88 151 64 150
1 128 183 64 182
1 168 215 64 214
1 97 233 89 247
1 97 261 89 247
1 137 265 129 279
1 137 293 129 279
1 88 247 64 246
1 128 279 64 278
1 97 329 89 343
1 97 357 89 343
1 137 361 129 375
1 137 389 129 375
1 88 343 64 342
1 128 375 64 374
1 97 425 89 439
1 97 453 89 439
1 97 489 89 503
1 97 517 89 503
1 137 521 121 535
1 137 549 121 535
1 177 553 169 567
1 177 581 169 567
1 97 585 89 599
1 97 613 89 599
1 88 439 64 438
1 88 503 64 502
1 120 535 64 534
1 88 599 64 598
1 168 567 64 566
1 232 151 142 151
1 232 183 182 183
1 232 215 222 215
1 232 247 142 247
1 232 279 182 279
1 232 407 64 406
1 232 343 142 343
1 232 375 182 375
1 232 439 142 439
1 232 471 64 470
1 232 503 142 503
1 232 535 182 535
1 232 567 222 567
1 232 599 142 599
1 232 631 64 630
1 232 311 64 310
1 353 153 233 151
1 233 183 353 162
1 353 172 233 215
1 233 247 353 181
1 353 193 233 279
1 353 202 233 311
1 353 212 233 343
1 233 375 353 221
1 353 233 233 407
1 233 439 353 242
1 353 252 233 471
1 233 503 353 261
1 353 273 233 535
1 233 567 353 282
1 233 599 353 292
1 353 301 233 631
38 6
20 496 200 555 181 0
c_2
4 336 216 385 167 2 1
4 240 200 289 151 2 1
10 392 200 409 183 0 0
4 416 216 465 167 0 1
4 240 328 289 279 2 1
10 88 328 105 311 0 0
4 112 344 161 295 0 1
4 240 456 289 407 2 1
10 88 424 105 407 0 0
4 112 440 161 391 0 1
10 88 488 105 471 0 0
4 240 584 289 535 2 1
10 88 648 105 631 0 0
4 112 664 161 615 0 1
19 16 168 75 149 0
in_0
19 16 200 75 181 0
in_1
19 16 232 75 213 0
in_2
19 16 264 75 245 0
in_3
19 16 296 75 277 0
in_0
19 16 328 75 309 0
in_1
19 16 360 75 341 0
in_2
19 16 392 75 373 0
in_3
19 16 424 75 405 0
in_0
19 16 456 75 437 0
in_1
19 16 488 75 469 0
in_2
19 16 584 75 565 0
in_1
19 16 520 75 501 0
in_3
19 16 552 75 533 0
in_0
19 16 616 75 597 0
in_2
19 16 648 75 629 0
in_3
4 112 504 161 455 0 1
10 152 168 169 151 0 0
10 152 200 169 183 0 0
10 152 232 169 215 0 0
10 152 264 169 247 0 0
10 152 296 169 279 0 0
10 152 360 169 343 0 0
10 152 392 169 375 0 0
10 152 456 169 439 0 0
10 152 520 169 503 0 0
10 152 552 169 535 0 0
10 152 584 169 567 0 0
10 152 616 169 599 0 0
22 8 128 131 108 0 \NUL
Part C: NOR ONLY
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 114 44 0 \NUL
Kanuma, Midori
22 8 96 75 76 0 \NUL
mkanuma
22 344 248 628 228 0 \NUL
<--------------------------------------------------------------------
22 352 280 690 260 0 \NUL
For this part, I also opted not to recycle the inverted
22 352 304 670 284 0 \NUL
inputs from part B to show that it's actually more
22 352 328 646 308 0 \NUL
simple to not invert the original inputs in this
22 352 352 659 332 0 \NUL
instance. The rest of the circuit is equivalent to
22 352 376 686 356 0 \NUL
part C: SOP and part C: NAND only that's expanded
22 352 400 666 380 0 \NUL
using De Morgan's law. This circuit will give the
22 352 424 651 404 0 \NUL
same output as aforementioned circuits since
22 352 448 591 428 0 \NUL
They represent the same truth table.
22 352 480 656 460 0 \NUL
We notice that the NAND circuit uses 17 NAND
22 352 504 697 484 0 \NUL
gates while the NOR circuit only uses 10 NOR gates.
1 417 177 401 191
1 400 191 382 191
1 497 190 462 191
1 417 205 401 191
1 113 305 97 319
1 113 333 97 319
1 241 298 158 319
1 113 401 97 415
1 113 429 97 415
1 241 417 158 415
1 113 625 97 639
1 113 653 97 639
1 241 573 158 639
1 286 175 337 177
1 337 186 286 303
1 337 196 286 431
1 337 205 286 559
1 96 319 72 318
1 96 415 72 414
1 96 479 72 478
1 96 639 72 638
1 113 465 97 479
1 113 493 97 479
1 241 436 158 479
1 160 159 72 158
1 72 190 160 191
1 160 223 72 222
1 160 255 72 254
1 160 287 72 286
1 160 351 72 350
1 160 383 72 382
1 160 447 72 446
1 160 511 72 510
1 160 543 72 542
1 160 575 72 574
1 160 607 72 606
1 241 161 161 159
1 241 170 161 191
1 241 180 161 223
1 241 189 161 255
1 241 289 161 287
1 241 308 161 351
1 241 317 161 383
1 241 426 161 447
1 241 445 161 511
1 241 545 161 543
1 241 554 161 575
1 241 564 161 607
39 16777215
47 0
40 1 8 8
50 800 800
51 1 30
30
System
20
700
0
0
1
2
2
34
